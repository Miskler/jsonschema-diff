How read it?
============

Путь
----

Библиотека отображает пути python-подобным путем.

Мы берем за данность что каждый элемент в пути - это обьект.
Его свойства (`type`, `format`, etc...) отображаются с точкой-префиксом.

Путь отображается так же, как вы бы написали его в python - ["path"]["to"]["element"].

Массивы отображаются как числа от 0 до бесконечности (индекс отображает какой из элементов в массиве).
Например ["array"][0]["element"].

В пути могут попадать свойства, например `$def` - это не часть json пути, 
мы не можем к нему обратится в реальном json, но он есть в схеме. Например `["somepath"].$def["some"]["property"]`

Префиксы
--------

Существуют следующие префиксы:

* `"+"`  добавление
* `"-"`  удаление
* `"r"`  замена
* `"m"`  модификация содержмого *(отличается от замены тем, что заменяется не весь элемент, а его часть)*
* `" "`  нет изменений
* `"?"`  не определено *(по сути является ошибкой)*

Если префиксы `+` / `-` определен в той же строке, что и путь, 
это значит что статус глобален для обьекта.
То есть добавлено не свойство, а объект целиком!

Переносы
--------

Для минимилизации используемого пространства, 
если изменения косаются 1 параметра обьекта, 
или обьект с 1 параметром был изменен - все отображается в одной строке, 
в иных случаях используется многострочное отображение.


context
-------

.. jsonschemadiff:: basic/how_read_it/jsons/context.old.schema.json basic/how_read_it/jsons/context.new.schema.json
   :name: context.svg
   :title: Context
   :no-legend:

range
-----

.. jsonschemadiff:: basic/how_read_it/jsons/range.old.schema.json basic/how_read_it/jsons/range.new.schema.json
    :title: Range
    :no-legend:
